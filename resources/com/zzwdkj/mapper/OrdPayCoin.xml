<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- ord_pay_wlt: 订单_支付_积分支付记录表--><!--修改人：sfn；时间：12.7；新添加的xml文件-->
<mapper namespace="OrdPayCoin">
    <resultMap id="result_base" type="OrdPayCoin">
        <id property="id" column="id" jdbcType="VARCHAR"/>
        <result property="coinid" column="coinid" jdbcType="VARCHAR"/>
        <result property="coin" column="coin" jdbcType="DECIMAL"/>
        <result property="state" column="state" jdbcType="INTEGER"/>
        <result property="payno" column="payno" jdbcType="VARCHAR"/>
        <result property="resvAcct" column="resv_acct" jdbcType="VARCHAR"/>
        <result property="crtime" column="crtime" jdbcType="TIMESTAMP"/>
        <result property="uptime" column="uptime" jdbcType="TIMESTAMP"/>
    </resultMap>


    <sql id="columns">
	     id, coinid,  coin,  state,  payno,  resv_acct,  crtime,  uptime
	</sql>

    <sql id="sql_query_where">
        <where>
            <if test="@Ognl@isNotEmpty(id)">AND id = #{id}</if>
            <if test="@Ognl@isNotEmpty(coinid)">AND coinid = #{coinid}</if>
            <if test="@Ognl@isNotEmpty(coin)">AND coin = #{coin}</if>
            <if test="@Ognl@isNotEmpty(state)">AND state = #{state}</if>
            <if test="@Ognl@isNotEmpty(payno)">AND payno = #{payno}</if>
            <if test="@Ognl@isNotEmpty(resvAcct)">AND resv_acct = #{resvAcct}</if>
            <if test="@Ognl@isNotEmpty(crtime)">AND crtime = #{crtime}</if>
            <if test="@Ognl@isNotEmpty(uptime)">AND uptime = #{uptime}</if>
        </where>
    </sql>

    <insert id="insert" parameterType="OrdPayCoin">
        insert into ord_pay_coin(
        <include refid="columns"/>
        ) values(
        #{id,jdbcType=VARCHAR },#{coinid,jdbcType=VARCHAR },#{coin,jdbcType=DECIMAL },#{state,jdbcType=INTEGER },#{payno,jdbcType=VARCHAR },#{resvAcct,jdbcType=VARCHAR },#{crtime,jdbcType=TIMESTAMP },#{uptime,jdbcType=TIMESTAMP }
        )
    </insert>

    <update id="update" parameterType="OrdPayCoin">
        update ord_pay_coin
        <set>
            <if test="@Ognl@isNotEmpty(coinid)">
                coinid= #{coinid,jdbcType=VARCHAR },
            </if>
            <if test="@Ognl@isNotEmpty(coin)">
                coin= #{coin,jdbcType=DECIMAL },
            </if>
            <if test="@Ognl@isNotEmpty(state)">
                state= #{state,jdbcType=INTEGER },
            </if>
            <if test="@Ognl@isNotEmpty(payno)">
                payno= #{payno,jdbcType=VARCHAR },
            </if>
            <if test="@Ognl@isNotEmpty(resvAcct)">
                resv_acct= #{resvAcct,jdbcType=VARCHAR },
            </if>
            <if test="@Ognl@isNotEmpty(crtime)">
                crtime= #{crtime,jdbcType=TIMESTAMP },
            </if>
            <if test="@Ognl@isNotEmpty(uptime)">
                uptime= #{uptime,jdbcType=TIMESTAMP },
            </if>
        </set>
        where id =#{id}
    </update>

    <update id="updateOrdPaySt" parameterType="map">
        update ord_pay_coin set state = #{state},uptime = now() where payno = #{ordno}
    </update>

    <delete id="delete" parameterType="java.lang.String">
        delete from ord_pay_coin
          where id =#{id}
    </delete>

    <select id="load" parameterType="java.lang.String" resultMap="result_base">
        select * from ord_pay_coin
	          where id =#{id}
    </select>

    <select id="query" parameterType="map" resultMap="result_base">
        select * from ord_pay_coin
        <include refid="sql_query_where"/>
        <if test="@Ognl@isNotEmpty(orderField)">
            order by ${orderField} ${orderSeq}
        </if>
        <if test="@Ognl@isEmpty(orderField)">
            order by crtime desc
        </if>
    </select>


    <select id="count" parameterType="Map" resultType="Integer">
        select count(1) from ord_pay_coin
        <include refid="sql_query_where"/>
    </select>
</mapper>