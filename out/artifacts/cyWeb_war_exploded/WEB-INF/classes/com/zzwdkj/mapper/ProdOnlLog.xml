<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- prod_onl_log: 产品_在线记录表-->
<mapper namespace="ProdOnlLog">
    <resultMap id="result_base" type="ProdOnlLog">
        <id property="id" column="id" jdbcType="VARCHAR"/>
        <result property="bizNo" column="biz_no" jdbcType="VARCHAR"/>
        <result property="prodNo" column="prod_no" jdbcType="VARCHAR"/>
        <result property="gpno" column="gpno" jdbcType="VARCHAR"/>
        <result property="firstOnlineTime" column="first_online_time" jdbcType="TIMESTAMP"/>
        <result property="curOnlineTime" column="cur_online_time" jdbcType="TIMESTAMP"/>
        <result property="offLineTime" column="off_line_time" jdbcType="TIMESTAMP"/>
        <result property="state" column="state" jdbcType="INTEGER"/>
        <result property="crtime" column="crtime" jdbcType="TIMESTAMP"/>
        <result property="uptime" column="uptime" jdbcType="TIMESTAMP"/>
        <result property="pos" column="pos" jdbcType="VARCHAR"/>
        <result property="addr" column="addr" jdbcType="VARCHAR"/>
        <result property="provName" column="prov_name" jdbcType="VARCHAR"/>
        <result property="cityName" column="city_name" jdbcType="VARCHAR"/>
        <result property="distName" column="dist_name" jdbcType="VARCHAR"/>
    </resultMap>


    <sql id="columns">
	     id,  biz_no,  prod_no,  gpno,  first_online_time,  cur_online_time,  off_line_time,  state,  crtime,  uptime 
	</sql>

    <sql id="sql_query_where">
        <where>
            <if test="@Ognl@isNotEmpty(id)">AND id = #{id}</if>
            <if test="@Ognl@isNotEmpty(bizNo)">AND biz_no = #{bizNo}</if>
            <if test="@Ognl@isNotEmpty(prodNo)">AND prod_no = #{prodNo}</if>
            <if test="@Ognl@isNotEmpty(gpno)">AND gpno = #{gpno}</if>
            <if test="@Ognl@isNotEmpty(firstOnlineTime)">AND first_online_time = #{firstOnlineTime}</if>
            <if test="@Ognl@isNotEmpty(curOnlineTime)">AND cur_online_time = #{curOnlineTime}</if>
            <if test="@Ognl@isNotEmpty(offLineTime)">AND off_line_time = #{offLineTime}</if>
            <if test="@Ognl@isNotEmpty(state)">AND state = #{state}</if>
            <if test="@Ognl@isNotEmpty(crtime)">AND crtime = #{crtime}</if>
            <if test="@Ognl@isNotEmpty(uptime)">AND uptime = #{uptime}</if>
        </where>
    </sql>

    <insert id="insert" parameterType="ProdOnlLog">
        insert into prod_onl_log(
        <include refid="columns"/>
        ) values(
        #{id,jdbcType=VARCHAR },#{bizNo,jdbcType=VARCHAR },#{prodNo,jdbcType=VARCHAR },#{gpno,jdbcType=VARCHAR },#{firstOnlineTime,jdbcType=TIMESTAMP },#{curOnlineTime,jdbcType=TIMESTAMP },#{offLineTime,jdbcType=TIMESTAMP },#{state,jdbcType=INTEGER },#{crtime,jdbcType=TIMESTAMP },#{uptime,jdbcType=TIMESTAMP }
        )
    </insert>

    <update id="update" parameterType="ProdOnlLog">
        update prod_onl_log
        <set>
            <if test="@Ognl@isNotEmpty(bizNo)">
                biz_no= #{bizNo,jdbcType=VARCHAR },
            </if>
            <if test="@Ognl@isNotEmpty(prodNo)">
                prod_no= #{prodNo,jdbcType=VARCHAR },
            </if>
            <if test="@Ognl@isNotEmpty(gpno)">
                gpno= #{gpno,jdbcType=VARCHAR },
            </if>
            <if test="@Ognl@isNotEmpty(firstOnlineTime)">
                first_online_time= #{firstOnlineTime,jdbcType=TIMESTAMP },
            </if>
            <if test="@Ognl@isNotEmpty(curOnlineTime)">
                cur_online_time= #{curOnlineTime,jdbcType=TIMESTAMP },
            </if>
            <if test="@Ognl@isNotEmpty(offLineTime)">
                off_line_time= #{offLineTime,jdbcType=TIMESTAMP },
            </if>
            <if test="@Ognl@isNotEmpty(state)">
                state= #{state,jdbcType=INTEGER },
            </if>
            <if test="@Ognl@isNotEmpty(crtime)">
                crtime= #{crtime,jdbcType=TIMESTAMP },
            </if>
            <if test="@Ognl@isNotEmpty(uptime)">
                uptime= #{uptime,jdbcType=TIMESTAMP },
            </if>
        </set>
        where id =#{id}
    </update>

    <update id="updateProdOutLine" parameterType="map">
        update prod_onl_log set state = 0 ,off_line_time=now(),uptime=now() where gpno = #{gprsNo}
    </update>
    <delete id="delete" parameterType="java.lang.String">
        delete from prod_onl_log
          where id =#{id}
    </delete>

    <delete id="deleteProdOnlLog" parameterType="map">
        delete from prod_onl_log
        where  gpno = #{gprsNo}
    </delete>


    <select id="load" parameterType="java.lang.String" resultMap="result_base">
        select * from prod_onl_log 
	          where id =#{id}
    </select>


    <select id="loadByProdNo" parameterType="java.lang.String" resultMap="result_base">
        select * from prod_onl_log
	          where prod_no =#{prodNo}
    </select>

    <select id="queryProdOnlineState" parameterType="java.lang.String" resultMap="result_base">
        select ifnull(prod_onl_log.state,0) as state,ifnull(prod_onl_log.prod_no,'') AS prodNo,prod.gprs_no as gprsNo from prod_onl_log RIGHT JOIN  prod ON prod_onl_log.prod_no=prod.prod_no
	          where prod.biz_no =#{bizNo} AND prod.gprs_no is not null
    </select>

    <select id="loadProdOnlLog" parameterType="map" resultMap="result_base">
        select * from prod_onl_log where biz_no = #{bizNo} and prod_no= #{prodNo} and gpno = #{gprsNo} limit 1
    </select>

    <select id="loadProdOnlineByProdNo" parameterType="java.lang.String" resultMap="result_base">
        select * from prod_onl_log where prod_no= #{prodNo}  limit 1
    </select>

    <select id="query" parameterType="map" resultMap="result_base">
        select * from prod_onl_log
        <include refid="sql_query_where"/>
        <if test="@Ognl@isNotEmpty(orderField)">
            order by ${orderField} ${orderSeq}
        </if>
        <if test="@Ognl@isEmpty(orderField)">
            order by crtime desc
        </if>
    </select>

    <select id="queryProdOffLine" parameterType="map" resultMap="result_base">
        SELECT
        o.*, p.addr,p.prov_name,p.city_name,p.dist_name,
        p.pos
        FROM
        prod_onl_log o
        LEFT JOIN prod_instl_pos p ON o.PROD_NO = p.PROD_NO
        where o.state = 0 and o.biz_no = #{bizNo}
        <if test="@Ognl@isNotEmpty(gprsNo)">
            and o.gpno = #{gprsNo}
        </if>
        order by o.off_line_time asc
    </select>

    <select id="queryProdOnLine" parameterType="map" resultMap="result_base">
        SELECT
        o.*, p.addr,p.prov_name,p.city_name,p.dist_name,
        p.pos
        FROM
        prod_onl_log o
        LEFT JOIN prod_instl_pos p ON o.PROD_NO = p.PROD_NO
        where o.state = 1 and o.biz_no = #{bizNo}
        <if test="@Ognl@isNotEmpty(gprsNo)">
            and o.gpno = #{gprsNo}
        </if>
        order by o.cur_online_time asc
    </select>

    <select id="countProdOffLine" parameterType="map" resultType="Integer">
        SELECT
        count(1)
        FROM
        prod_onl_log o
        where o.state = 0 and o.biz_no = #{bizNo}
        <if test="@Ognl@isNotEmpty(gprsNo)">
            and o.gpno = #{gprsNo}
        </if>
    </select>

    <select id="countProdOnLine" parameterType="map" resultType="Integer">
        SELECT
        count(1)
        FROM
        prod_onl_log o
        where o.state = 1 and o.biz_no = #{bizNo}
        <if test="@Ognl@isNotEmpty(gprsNo)">
            and o.gpno = #{gprsNo}
        </if>
    </select>

    <select id="statProdOffLineCount" parameterType="string" resultType="Integer">
        select count(1) from prod_onl_log ol LEFT JOIN prod ON ol.prod_no=prod.prod_no  where ol.state = 0 and prod.gprs_no is not null and prod.biz_no = #{bizNo}
    </select>

    <select id="statProdOnLineCount" parameterType="string" resultType="Integer">
        select count(1) from prod_onl_log ol LEFT JOIN prod ON ol.prod_no=prod.prod_no  where ol.state = 1 and prod.gprs_no is not null and prod.biz_no = #{bizNo}
    </select>

    <select id="count" parameterType="Map" resultType="Integer">
        select count(1) from prod_onl_log
        <include refid="sql_query_where"/>
    </select>
</mapper>